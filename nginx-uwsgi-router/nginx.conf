daemon                  off;
master_process          on;
worker_processes        1;
pid                     /var/run/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include             /opt/nginx-1.6.1-demo/conf/mime.types;

    access_log          /opt/nginx-1.6.1-demo/logs/access.log;
    error_log           /opt/nginx-1.6.1-demo/logs/error.log;

    default_type        application/octet-stream;
    gzip                on;
    sendfile            on;

    # source: https://calomel.org/nginx.html

    client_body_timeout      3s; # maximum time between packets the client can pause when sending nginx any data
    client_header_timeout    3s; # maximum time the client has to send the entire header to nginx
    keepalive_timeout       75s; # timeout which a single keep-alive client connection will stay open
    send_timeout             9s; # maximum time between packets nginx is allowed to pause when sending the client data
    keepalive_requests        50;  # number of requests per connection, does not affect SPDY
    keepalive_disable         none; # allow all browsers to use keepalive connections
    max_ranges                0;   # disabled to stop range header DoS attacks as resumed downloads are denied

    ## Proxy settings. Make sure the "timeout"s are long enough to
    ## take account of over loaded back end servers or long running
    ## scripts. If the proxy timeout is too short the nginx proxy
    ## might re-request the data over and over again, putting more
    ## load on the back end server. 
    uwsgi_max_temp_file_size    0;
    uwsgi_connect_timeout      900;
    uwsgi_send_timeout         900;
    uwsgi_read_timeout         900;
    uwsgi_buffer_size          4k;
    uwsgi_buffers              4 32k;
    uwsgi_busy_buffers_size    64k;
    uwsgi_temp_file_write_size 64k;
    uwsgi_intercept_errors     off;

    #uwsgi_cache_path /var/cache/www levels=1:2 keys_zone=router:10m inactive=1d max_size=2000m;
    uwsgi_temp_path /var/cache/www/tmp;

    ## Limit requests per second to 250 requests  per minute. If the
    ## user's ip address goes over the limit they will be sent an
    ## error 503 for every subsequent request.
    limit_req_zone  $binary_remote_addr  zone=gulag:10m   rate=250r/m;



    server {
        server_name ~^www\.(?<domain>.+)$;
        rewrite ^ $scheme://$domain$request_uri permanent;
    }

    server {
	listen 80 default_server;
        server_name _;
        root /var/www;

        error_page 500 502 503 504 /50x.html;
        error_page 404 /404.html;
	recursive_error_pages on;

        location ~* \.html$ {
            internal;
        }

        location /assets {
            alias /var/www/assets;
            expires max;
        }

        location /media  {
            alias /var/www/media/$host;
            expires max;
        }

        location = /favicon.ico {
            try_files /media/favicon.ico /assets/favicon.ico =404;
        }

        location / {
            try_files $uri $uri/ @proxy;
        }

        location @proxy {

            #uwsgi_cache router;
            #uwsgi_cache_key $scheme$host$request_uri;
            #uwsgi_cache_valid  200 301 302 304 30m;
            #uwsgi_cache_valid  any 1m;
            include     /opt/nginx-1.6.1-demo/conf/uwsgi_params;
            uwsgi_pass  unix:/var/run/uwsgi-router.sock;
        }

    }
}
